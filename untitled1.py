# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ErrXWURAEbyxe4gKmuFPxNf_QXqBKE2X
"""

import pandas as pd
import folium

df = pd.read_csv(r'/content/국토교통부_전국 버스정류장 위치정보_20241028.csv', encoding='cp949')

import pandas as pd
import folium

df = pd.read_csv(r'/content/국토교통부_전국 버스정류장 위치정보_20241028 (1).csv', encoding='cp949')

import pandas as pd
import folium

# 파일 이름에 (1) 포함
df = pd.read_csv('/content/국토교통부_전국 버스정류장 위치정보_20241028.csv', encoding='cp949')
df = df[df['도시명'].str.contains("서울특별시")]

map = folium.Map(location=[37.6424341, 127.4890319], zoom_start=12)

for item in df.itertuples():
    folium.CircleMarker(
        location=[item[3], item[4]],  # 위도, 경도
        radius=1,
        color='red',
        fill_color='red'
    ).add_to(map)

map

import geopandas as gpd

gdf = gpd.read_file("/content/서울 자치구 경계 2017.geojson")
gdf

map = folium.Map(location=[37.5664,126.9779],zoom_atart=12)
folium.GeoJson(gdf).add_to(map)
map

import pandas as pd

# 파일명은 실제 Colab 파일명과 동일하게
df = pd.read_csv('/content/국토교통부_전국 버스정류장 위치정보_20241028.csv', encoding='cp949')

import geopandas as gpd
from shapely.geometry import Point

# Convert the DataFrame to a GeoDataFrame
points = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df['경도'], df['위도']))

joined = gpd.sjoin(points, gdf, how="left", predicate="within")
count = joined.groupby("SIG_CD").size().reset_index(name="count")

map = folium.Map(location=[37.6424431, 127.4890319], zoom_start=12)

folium.Choropleth(
    geo_data=gdf,
    data=count,
    columns=["SIG_CD", "count"],
    key_on="feature.properties.SIG_CD",
    fill_color="YlOrRd"
).add_to(map)

map

import pandas as pd
from io import StringIO

with open(
    "/content/서울시 휴게음식점 인허가 정보.csv",
    "r",
    encoding="euc-kr",   # 또는 cp949
    errors="ignore"
) as f:
    text = f.read()      # = 필수!

store = pd.read_csv(StringIO(text))

filtered_store =store[(store['영업상태명']!="폐업")]
filtered_store = filtered_store.dropna(subset=['좌표정보(X)','좌표정보(Y)'])
filtered_store[['사업자명','좌표정보(X)','좌표정보(Y)']]

gdf = gpd. GeoDataFrame(filtered_store,
geometry=gpd. points_from_xy(
filtered_store['좌표정보(X) '], filtered_store['좌표정보(Y)'])
, crs='EPSG:5174')

gdf.to_crs(epsg=4236)
gdf =gdf.drona(subset=['geometry'])

map =folium.Map(location=[37.5664,126.9779],zoom_start=12)
area= gpd.read_file("/content/Hangjeongdong 서울특별시.geojson")
joined =gpd.sjoin(gdf,area,how='left',predicate='within')
counts =joined.groupby('adm_cd2').size().reset-index(name='count')
counts

folium. Choropleth(
     geo_data=area,
     data=counts,
columns=["adm_cd2", "count"],
key_on="feature.properties.adm_cd2",
filL_color="YLOrRd",
).add_to (map)

folium.GeoJson(
    area,name='popup,tooltip=folium.GeoJsonTooltip(fields=["adm_nm"])'
)
map